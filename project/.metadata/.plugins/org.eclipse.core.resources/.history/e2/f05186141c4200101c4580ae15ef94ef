#include "ultrasonic.h"
#include "stm32f4xx.h"

#define TRIG_PIN     9
#define ECHO_PIN     8

void ultrasonic_init(void)
{
    // Enable GPIOA
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;

    // TRIG (PA9) as output
    GPIOA->MODER |= (1 << (2 * TRIG_PIN));
    GPIOA->MODER &= ~(1 << (2 * TRIG_PIN + 1));

    // ECHO (PA8) as input
    GPIOA->MODER &= ~(3 << (2 * ECHO_PIN));

    // Enable TIM2 for delay_us
    RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
    TIM2->PSC = 84 - 1;     // 1 MHz (assuming 84 MHz system clock)
    TIM2->ARR = 0xFFFF;
    TIM2->CR1 |= TIM_CR1_CEN;  // Enable timer
}

void delay_us(uint16_t us)
{
    TIM2->CNT = 0;
    while (TIM2->CNT < us);
}

float read_distance_cm(void)
{
    uint32_t start = 0, end = 0;

    // Send 10 us pulse on TRIG
    GPIOA->ODR &= ~(1 << TRIG_PIN);
    delay_us(2);
    GPIOA->ODR |= (1 << TRIG_PIN);
    delay_us(10);
    GPIOA->ODR &= ~(1 << TRIG_PIN);

    // Wait for ECHO HIGH
    while (!(GPIOA->IDR & (1 << ECHO_PIN)));
    start = TIM2->CNT;

    // Wait for ECHO LOW
    while (GPIOA->IDR & (1 << ECHO_PIN));
    end = TIM2->CNT;

    uint32_t time_diff = (end >= start) ? (end - start) : ((0xFFFF - start) + end);
    float distance = time_diff / 58.0;

    return distance;
}
